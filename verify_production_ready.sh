#!/bin/bash

# Script de Verifica√ß√£o - Kommo Analytics Production Ready
# Verifica se todos os arquivos essenciais est√£o presentes e funcionais

echo "üîç VERIFICA√á√ÉO DE PRODU√á√ÉO - Kommo Analytics"
echo "=============================================="

# Contador de verifica√ß√µes
total_checks=0
passed_checks=0

# Fun√ß√£o para verificar arquivo
check_file() {
    local file="$1"
    local description="$2"
    ((total_checks++))
    
    if [ -f "$file" ]; then
        echo "‚úÖ $description: $file"
        ((passed_checks++))
    else
        echo "‚ùå $description: $file - FALTANDO!"
    fi
}

# Fun√ß√£o para verificar diret√≥rio
check_dir() {
    local dir="$1"
    local description="$2"
    ((total_checks++))
    
    if [ -d "$dir" ]; then
        echo "‚úÖ $description: $dir"
        ((passed_checks++))
    else
        echo "‚ùå $description: $dir - FALTANDO!"
    fi
}

echo ""
echo "üìÅ VERIFICANDO ESTRUTURA DE ARQUIVOS:"
echo "------------------------------------"

# Arquivos essenciais do Docker
check_file "Dockerfile" "Dockerfile"
check_file "docker-compose.prod.yml" "Docker Compose Produ√ß√£o"
check_file "docker-entrypoint.sh" "Script de Inicializa√ß√£o"
check_file "requirements.txt" "Depend√™ncias Python"
check_file "nginx.conf" "Configura√ß√£o Nginx"

# Arquivos de configura√ß√£o
check_file "env.prod.example" "Exemplo de Configura√ß√£o"
check_file "deploy_digital_ocean.sh" "Script de Deploy"

# Aplica√ß√£o principal
check_file "DASHBOARD/main_app.py" "Aplica√ß√£o Principal Streamlit"

# Scripts de automa√ß√£o essenciais
check_file "AUTOMATION/run_all_etls.sh" "Script Principal ETL"
check_file "AUTOMATION/backup_database.sh" "Script de Backup"
check_file "AUTOMATION/setup_cron.sh" "Configura√ß√£o Cron"
check_file "AUTOMATION/health_check.sh" "Health Check"
check_file "AUTOMATION/guarantee_daily_updates.py" "Monitor Di√°rio"

# ETLs
check_file "ETL/kommo_etl_modulo1_leads.py" "ETL M√≥dulo 1 - Leads"
check_file "ETL/kommo_etl_modulo2_funil.py" "ETL M√≥dulo 2 - Funil"
check_file "ETL/kommo_etl_modulo3_atividades.py" "ETL M√≥dulo 3 - Atividades"
check_file "ETL/kommo_etl_modulo4_conversao.py" "ETL M√≥dulo 4 - Convers√£o"
check_file "ETL/kommo_etl_modulo5_performance.py" "ETL M√≥dulo 5 - Performance"
check_file "ETL/kommo_etl_modulo6_forecast_integrado.py" "ETL M√≥dulo 6 - Forecast"

# Diret√≥rios essenciais
check_dir "LOGS" "Diret√≥rio de Logs"
check_dir "BACKUP" "Diret√≥rio de Backups"
check_dir "ETL" "Diret√≥rio ETL"
check_dir "AUTOMATION" "Diret√≥rio Automa√ß√£o"
check_dir "DASHBOARD" "Diret√≥rio Dashboard"

echo ""
echo "üîß VERIFICANDO CONFIGURA√á√ïES:"
echo "-----------------------------"

# Verificar se os scripts t√™m permiss√£o de execu√ß√£o
((total_checks++))
if [ -x "deploy_digital_ocean.sh" ]; then
    echo "‚úÖ Script de deploy execut√°vel"
    ((passed_checks++))
else
    echo "‚ùå Script de deploy n√£o execut√°vel"
fi

((total_checks++))
if [ -x "AUTOMATION/run_all_etls.sh" ]; then
    echo "‚úÖ Script ETL execut√°vel"
    ((passed_checks++))
else
    echo "‚ùå Script ETL n√£o execut√°vel"
fi

# Verificar se o Dockerfile tem as configura√ß√µes corretas
((total_checks++))
if grep -q "FROM python:3.12-slim" Dockerfile; then
    echo "‚úÖ Dockerfile usa Python 3.12"
    ((passed_checks++))
else
    echo "‚ùå Dockerfile n√£o usa Python 3.12"
fi

((total_checks++))
if grep -q "EXPOSE 8501" Dockerfile; then
    echo "‚úÖ Dockerfile exp√µe porta 8501"
    ((passed_checks++))
else
    echo "‚ùå Dockerfile n√£o exp√µe porta 8501"
fi

echo ""
echo "üìä RESULTADO DA VERIFICA√á√ÉO:"
echo "============================"
echo "Verifica√ß√µes passaram: $passed_checks/$total_checks"

if [ $passed_checks -eq $total_checks ]; then
    echo "üéâ SUCESSO! Projeto est√° pronto para produ√ß√£o!"
    echo ""
    echo "üìã PR√ìXIMOS PASSOS:"
    echo "1. Configure o arquivo .env com suas credenciais"
    echo "2. Execute: ./deploy_digital_ocean.sh"
    echo "3. Acesse: http://seu-ip:8501"
    exit 0
else
    echo "‚ö†Ô∏è ATEN√á√ÉO! Alguns arquivos est√£o faltando ou com problemas."
    echo "Corrija os problemas antes de fazer o deploy."
    exit 1
fi
